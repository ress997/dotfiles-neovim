[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
autocmd MyAutoCmd VimEnter * nested colorscheme iceberg
'''

# ------

[[plugins]]
repo = 'sheerun/vim-polyglot'
merged = 0
hook_add = '''
let g:polyglot_disabled = ['markdown']
'''

[[plugins]] # vim
repo = 'vim-jp/syntax-vim-ex'

[[plugins]] # zsh
repo = 'chrisbra/vim-zsh'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'
hook_add = 'set helplang=ja,en'

# ------

[[plugins]] # 折りたたみを改善
repo = 'LeafCage/foldCC.vim'
hook_add = '''
	if &filetype !=# 'help'
		setlocal foldtext=FoldCCtext()
	endif
'''

[[plugins]] # 対応括弧のハイライトを改善
repo = 'itchyny/vim-parenmatch'
hook_add = '''
	let g:loaded_matchparen = v:true
'''

# ------

[[plugins]]
repo = 'mengelbrecht/lightline-bufferline'

[[plugins]]
repo = 'itchyny/lightline.vim'
depends = ['lightline-bufferline']
hook_add = '''
	" 現在のモードを表示しない
	set noshowmode
	" タブページを常に表示
	set showtabline=2

	let g:lightline = {'colorscheme': 'iceberg'}
	let g:lightline.active = {}
	let g:lightline.active.left = [['mode', 'paste'], ['filename'], ['skk']]
	let g:lightline.active.right = [['filetype'], ['fileencoding', 'indent'], ['percent']]
	let g:lightline.component_function = {}
	let g:lightline.my = {}

	let g:lightline.component_function.filetype = 'g:lightline.my.filetype'
	function! g:lightline.my.filetype() abort
		return (strlen(&filetype) ? &filetype : 'No ft')
	endfunction

	let g:lightline.component_function.indent = 'g:lightline.my.indent'
	function! g:lightline.my.indent() abort
		if &expandtab
			let s:indent = winwidth('.') >= 70 ? 'Space' : 'S'
		else
			let s:indent =  winwidth('.') >= 70 ? 'Tab' : 'T'
		endif
		return s:indent . ':' . &shiftwidth
	endfunction

	let g:lightline.component_function.skk = 'g:lightline.my.skkmode'
	function! g:lightline.my.skkmode() abort
		if dein#is_sourced('eskk.vim') && eskk#is_enabled()
			return get(g:eskk#statusline_mode_strings, eskk#get_current_instance().mode, '??')
		else
			return ''
		endif
	endfunction

	" bufferline
	let g:lightline.tabline = {'left': [['buffers']], 'right': [['close']]}
	let g:lightline.component_expand = {'buffers': 'lightline#bufferline#buffers'}
	let g:lightline.component_type = {'buffers': 'tabsel'}
	" バッファ番号を表示
	let g:lightline#bufferline#show_number = v:true
	" 絵文字を使用
	let g:lightline#bufferline#unicode_symbols = v:true
'''

# ------

[[plugins]]
repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'tbodt/deoplete-tabnine'
build = './install.sh'

[[plugins]]
repo = 'Shougo/deoplete-nextword'
if = 'executable("nextword")'

[[plugins]]
repo = 'Jagua/vim-denite-ghq'
if = 'executable("ghq")'
on_source = 'denite.nvim'
