[[plugins]] # Lib
repo = 'Shougo/context_filetype.vim'

[[plugins]] # Japanese doc
repo = 'vim-jp/vimdoc-ja'
hook_add = 'set helplang=ja,en'

[[plugins]] # Docker
repo = 'ekalinin/Dockerfile.vim'

# Golang {{{

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
on_cmd = ['GoInstallBinaries', 'GoUpdateBinaries']
hook_source = '''
	let g:go_fmt_autosave = g:false
	let g:go_fmt_command = "gofmt"
	let g:go_fmt_options = {'gofmt': '-s'}
	let g:go_snippet_engine = 'neosnippet'
	let g:go_template_autocreate = g:false
'''

[[plugins]] # 補完
repo = 'zchee/deoplete-go'
if = 'executable("gocode")'
depends = 'deoplete.nvim'
on_ft = 'go'
build = 'make'
hook_source = '''
	let g:deoplete#sources#go#use_cache = g:true
	let g:deoplete#sources#go#gocode_binary = $GOBIN . '/gocode'
	let g:deoplete#sources#go#sort_class = ['package', 'func', 'type', 'var', 'const']
'''

# }}}

[[plugins]] # Lua
repo = 'tbastos/vim-lua'

# Markdown {{{

[[plugins]] # GitHub Flavored Markdown
repo = 'rhysd/vim-gfm-syntax'
on_ft = 'markdown'
hook_source = '''
	let g:markdown_fenced_languages = [
	\	'html',
	\	'css',
	\	'scss',
	\	'javascript',
	\	'js=javascript',
	\	'yaml',
	\	'toml',
	\	'zsh',
	\]
'''

# }}}

[[plugins]] # TMUX
repo = 'tmux-plugins/vim-tmux'

[[plugins]] # Toml
repo  = 'cespare/vim-toml'

# Vim {{{

[[plugins]]
repo = 'vim-jp/syntax-vim-ex'

[[plugins]] # 補完
repo = 'Shougo/neco-vim'
depends = 'deoplete.nvim'
on_ft = 'vim'

# }}}
# zsh {{{

[[plugins]]
repo = 'chrisbra/vim-zsh'

[[plugins]]
repo = 'zplug/vim-zplug'

# }}}
