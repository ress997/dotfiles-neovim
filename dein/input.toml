[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
on_event = 'InsertEnter'
hook_add = '''
	" 補完のオプション
	set completeopt=menu,menuone,noinsert,noselect
	" 補完の表示項目数
	set pumheight=10
	" ins-completion-menu 関連のメッセージを表示しない
	set shortmess+=c

	set isfname-==
'''
hook_source = '''
	" <TAB>: completion.
	inoremap <silent><expr> <TAB> pumvisible() ? "\<C-n>" : <SID>check_back_space() ? "\<TAB>" : deoplete#manual_complete()
	function! s:check_back_space() abort
		let col = col('.') - 1
		return !col || getline('.')[col - 1]  =~# '\s'
	endfunction

	" <S-TAB>: completion back.
	inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

	" <C-g>:
	inoremap <expr><C-g> deoplete#refresh()

	" <CR>: close popup and save indent.
	inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
	function! s:my_cr_function() abort
		return pumvisible() ? deoplete#close_popup()."\<CR>" : "\<CR>"
	endfunction

	call deoplete#custom#source('nextword', 'filetypes',
      \ ['markdown', 'help', 'gitcommit', 'text'])

	" converters
	call deoplete#custom#source('_', 'converters', [
	\	'converter_remove_paren',
	\ 	'converter_remove_overlap',
	\ 	'matcher_length',
	\ 	'converter_truncate_abbr',
	\ 	'converter_truncate_menu',
	\ 	'converter_auto_delimiter',
	\ ])

	call deoplete#custom#source('_', 'matchers', ['matcher_fuzzy', 'matcher_length'])
	"call deoplete#custom#source('eskk', 'matchers', [])

	call deoplete#custom#option('ignore_sources', {'_': ['around', 'buffer', 'tag', 'dictionary']})

	call deoplete#custom#option({
			\ 'auto_refresh_delay': 10,
			\ 'camel_case': v:true,
			\ 'skip_multibyte': v:true,
			\ 'prev_completion_mode': 'none',
			\ 'auto_preview': v:true,
			\ })

	call deoplete#enable()
'''
